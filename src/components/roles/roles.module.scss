.roles {
  width: 100%;
  
  .addRole {
    width: 100%;
    padding: 3px;
    border-radius: 3px;
    background-color: rgb(233, 233, 233);
    font-weight: 700;
    color: gray;
    transition: background-color, color .3s;

    &:active,
    &:hover,
    &:focus {
      background-color: rgb(204, 227, 235);
      color: #424242;
      cursor: pointer;
    }
  }

  .roleSelection {
    font: inherit;
    
    .option {
      display: flex;
      align-items: center;
      width: 100%;
      font: inherit;
      cursor: pointer;
      padding: 8px 5px;
      margin-bottom: 1px;
      background-color: rgb(204, 227, 235);
      color: #424242;
    
      &:focus,
      &:hover {
        background-color: lightblue;
      }
    }
  }

  .windowWrapper {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    height: 100%;
  }



  .levelValueSelection {
    font: inherit;
    overflow-y: auto;
    margin-bottom: 12px;

    .option {
      display: flex;
      width: 100%;
      min-height: 37px;
      font: inherit;
      cursor: pointer;
      margin-bottom: 1px;
      background-color: rgb(204, 227, 235);
      color: #424242;

      input[type=radio],
      input[type=checkbox] {
        position: absolute;
        width: 1px;
        height: 1px;
        margin: -1px;
        border: 0;
        padding: 0;
        clip: rect(0 0 0 0);
        overflow: hidden;
      }

      // &:focus,
      &:hover {
        background-color: lightblue;

        input[type=radio]:checked ~ .tick,
        input[type=checkbox]:checked ~ .tick {
          &::after {
            border-color: lightblue;
          }
        }

      }

      &:has(input[type=checkbox]:focus) {
        background-color: lightblue;
      }
    }

    
    input[type=radio]:checked ~ .tick,
    input[type=checkbox]:checked ~ .tick {
      border-color: green;
      position: relative;
      
      &::before {
        opacity: 1;
        transition: opacity .3s;
      }
      &::after {
        opacity: 1;
        transition: opacity .6s;
      }

    }

    input[type=radio]:checked ~ label,
    input[type=checkbox]:checked ~ label {
      font-weight: 400;
    }

    .tick {
      height: 16px;
      width: 16px;
      border: 1px solid #978f8f;
      border-radius: 2px;
      margin-left: 10px;
      align-self: center;     
      position: relative;
      cursor: pointer;

      &::before {
        content: '';
        position: absolute;
        border: 1px solid green;
        border-radius: 3px;
        background-color: green;
        height: 10px;
        width: 3px;
        left: 3px;
        top: 3px;
        transform: rotate(-20deg);
        z-index: 17;
        opacity: 0;
      }
      &::after {
        content: '';
        position: absolute;
        border: 2px solid rgb(204, 227, 235);      
        border-radius: 3px;
        background-color: green;
        height: 19px;
        width: 7px;
        left: 6px;
        top: -4px;
        transform: rotate(30deg);
        z-index: 15;
        opacity: 0;
      }      
    }
    .levelValueCode {
      display: flex;
      align-items: center;
      justify-content: center;
      // width: 10%;
      padding: 0 5px;
      text-align: center;     
      cursor: pointer;
    }
    .levelValueName {
      flex-grow: 1;
      display: flex;
      align-items: center;
      cursor: pointer;
    }



  }

  .windowAccept {
    width: 100%;
    padding: 3px;
    border-radius: 3px;
    border: 1px solid lightblue;
    background-color: rgb(204, 227, 235);
    font-weight: 700;
    color: #424242;
    transition: background-color, color .3s;

    &:active,
    &:hover,
    &:focus {
      background-color: lightblue;
      color: #424242;
      cursor: pointer;
    }
  }



  

}
